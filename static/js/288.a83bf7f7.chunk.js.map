{"version":3,"file":"static/js/288.a83bf7f7.chunk.js","mappings":"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","sources":["components/Loader.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Puff, Triangle } from 'react-loader-spinner';\n\nimport './styled/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"container-loader\">\n      <Puff\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"white\"\n        ariaLabel=\"three-dots-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n\nexport const Placeholder = () => {\n  return (\n    <Triangle\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      color=\"#ffd447\"\n      ariaLabel=\"triangle-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'services/api';\nimport { Placeholder } from 'components/Loader';\n\nimport placeholderBackdrop from '../images/placeholderBackdropSearch.jpg';\nimport placeholderPoster from '../images/placeholderPosterSearch.png';\n\nimport './styled/Movies.css';\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  useEffect(() => {\n    const search = searchParams.get('name');\n    if (search === null) return;\n    getSearchMovie(search).then(resp => {\n      setSearchFilm(resp.results);\n    });\n  }, [searchParams]);\n\n  const updateQueryString = query => {\n    query.preventDefault();\n    const name = query.target.value;\n    const nextParams = name !== '' && { name };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div className=\"container-search\">\n      <div className=\"container-search-input\">\n        <input\n          type=\"text\"\n          className=\"input-search\"\n          placeholder=\"Search movie...\"\n          value={searchParams.get('name') || ''}\n          onChange={updateQueryString}\n          // onKeyDown={onInputKeyDown}\n        />\n        {/* <button\n          className=\"btn-search\"\n          type=\"button\"\n          onClick={handleClick}\n        >\n          <i className=\"bx bx-search bx-sm bx-burst-hover\"></i>\n        </button> */}\n      </div>\n      {searchFilm.length > 0 ? (\n        <ul className=\"list-search\">\n          {searchFilm.map(\n            ({\n              id,\n              original_title,\n              title,\n              poster_path,\n              backdrop_path,\n              original_language,\n              vote_average,\n              vote_count,\n              release_date,\n            }) => (\n              <Link key={id} state={{ from: location }} to={`${id}`}>\n                <li className=\"item-search\">\n                  <div className=\"img-search-backdrop\">\n                    <img\n                      src={\n                        backdrop_path\n                          ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                          : placeholderBackdrop\n                      }\n                      alt={title}\n                    />\n                  </div>\n\n                  <ul className=\"main-info-search\">\n                    <li>\n                      <img\n                        className=\"img-search-poster\"\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                            : placeholderPoster\n                        }\n                        alt={title}\n                      />\n                    </li>\n                    <li className=\"info-search-item\">\n                      <p className=\"title-search-item\">{original_title}</p>\n                      <p className=\"text-search-item\">\n                        <span>\n                          <strong>Original language: </strong>\n                          {original_language}\n                        </span>\n\n                        <span>\n                          <strong>Release date: </strong>\n                          {release_date}\n                        </span>\n                        <span>\n                          <strong>Rating: </strong>\n                          {Math.floor(vote_average * 10) / 10}({vote_count})\n                        </span>\n                      </p>\n                    </li>\n                  </ul>\n                </li>\n              </Link>\n            )\n          )}\n        </ul>\n      ) : (\n        <div className='placeholder-search'>\n          <Placeholder />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst KEY = 'da273fadec6e0549daf77f4eda281870';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst makeRequest = async path => {\n  const url = `${path}`;\n  try {\n    const response = await axios.get(url, {\n      params: { api_key: KEY },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error('Error')\n    console.error(error);\n  }\n};\n\nexport const getListTrending = async () =>\n  await makeRequest('trending/movie/day?');\n\nexport const getIdMovie = async movieId =>\n  await makeRequest(`movie/${movieId}`);\n\nexport const getCastMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/credits`);\n\nexport const getReviewsMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/reviews`);\n\n\n  export const getSearchMovie = async search =>\n  await makeRequest(`search/movie?query=${search}&page=1`);\n//   export const getSearchMovie = async () =>\n//   await makeRequest(`search/movie?query=car&page=1`);\n\n//   async function getIdMovie(search) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${search}?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getCastMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/credits?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data.cast;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getReviewsMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n//       );\n//       return response.data.results;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n//   export {\n//     getListTrending,\n//     getIdMovie,\n//     getCastMovie,\n//     getReviewsMovie,\n//   };\n"],"names":["_jsx","className","children","Puff","height","width","radius","color","ariaLabel","Placeholder","Triangle","visible","wrapperStyle","wrapperClass","_useState","useState","_useState2","_slicedToArray","searchFilm","setSearchFilm","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","search","get","getSearchMovie","then","resp","results","_jsxs","type","placeholder","value","onChange","query","preventDefault","name","target","length","map","_ref","id","original_title","title","poster_path","backdrop_path","original_language","vote_average","vote_count","release_date","Link","state","from","to","concat","src","placeholderBackdrop","alt","placeholderPoster","Math","floor","axios","makeRequest","_asyncToGenerator","_regeneratorRuntime","_callee","path","url","response","_context","prev","next","params","api_key","sent","abrupt","data","t0","toast","console","error","stop","_x","apply","arguments","getListTrending","_ref2","_callee2","_context2","getIdMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}