{"version":3,"file":"static/js/288.17c56d82.chunk.js","mappings":"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","sources":["components/Loader.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Puff, Triangle } from 'react-loader-spinner';\n\nimport './styled/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"container-loader\">\n      <Puff\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"white\"\n        ariaLabel=\"three-dots-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n\nexport const Placeholder = () => {\n  return (\n    <Triangle\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      color=\"#ffd447\"\n      ariaLabel=\"triangle-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { getSearchMovie } from 'services/api';\nimport { Placeholder } from 'components/Loader';\n\nimport placeholderBackdrop from '../images/placeholderBackdropSearch.jpg';\nimport placeholderPoster from '../images/placeholderPosterSearch.png';\n\nimport './styled/Movies.css';\n\nconst Movies = () => {\n  const location = useLocation();\n\n  const [search, setSearch] = useState([]);\n  const [searchData, setSearchData] = useState([]);\n\n  const onSearchListMovies = useMemo(() => {\n    return () => {\n      getSearchMovie(search).then(res => {\n        console.log(\"res\", res.results)\n        if (res.results.length === 0) {\n         toast.info(`Your search for \"${search}\" did not have any matches.`)\n         return\n        }\n        setSearchData(res.results);\n      });\n    };\n  }, [search]);\n\n  const onInputKeyDown = e => {\n    if (e.key === 'Enter') {\n      onSearchListMovies();\n    }\n  };\n\n  console.log('searchData', searchData);\n\n  return (\n    <div className=\"container-search\">\n      <div className=\"container-search-input\">\n        <input\n          type=\"text\"\n          className=\"input-search\"\n          placeholder=\"Search movie...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n          onKeyDown={onInputKeyDown}\n        />\n        <button\n          className=\"btn-search\"\n          type=\"button\"\n          onClick={onSearchListMovies}\n        >\n          <i className=\"bx bx-search bx-sm bx-burst-hover\"></i>\n        </button>\n      </div>\n      {searchData.length > 0 ? (\n        <ul className=\"list-search\">\n          {searchData.map(\n            ({\n              id,\n              original_title,\n              title,\n              poster_path,\n              backdrop_path,\n              original_language,\n              vote_average,\n              vote_count,\n              release_date,\n            }) => (\n              <Link key={id} state={{ from: location }} to={`${id}`}>\n                <li className=\"item-search\">\n                  <div className=\"img-search-backdrop\">\n                    <img\n                      src={\n                        backdrop_path\n                          ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                          : placeholderBackdrop\n                      }\n                      alt={title}\n                    />\n                  </div>\n\n                  <ul className=\"main-info-search\">\n                    <li>\n                      <img\n                        className=\"img-search-poster\"\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                            : placeholderPoster\n                        }\n                        alt={title}\n                      />\n                    </li>\n                    <li className=\"info-search-item\">\n                      <p className=\"title-search-item\">{original_title}</p>\n                      <p className=\"text-search-item\">\n                        <span>\n                          <strong>Original language: </strong>\n                          {original_language}\n                        </span>\n\n                        <span>\n                          <strong>Release date: </strong>\n                          {release_date}\n                        </span>\n                        <span>\n                          <strong>Rating: </strong>\n                          {Math.floor(vote_average * 10) / 10}({vote_count})\n                        </span>\n                      </p>\n                    </li>\n                  </ul>\n                </li>\n              </Link>\n            )\n          )}\n        </ul>\n      ) : (\n        <div className='placeholder-search'>\n          <Placeholder />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst KEY = 'da273fadec6e0549daf77f4eda281870';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst makeRequest = async path => {\n  const url = `${path}`;\n  try {\n    const response = await axios.get(url, {\n      params: { api_key: KEY },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error('Error')\n    console.error(error);\n  }\n};\n\nexport const getListTrending = async () =>\n  await makeRequest('trending/movie/day?');\n\nexport const getIdMovie = async movieId =>\n  await makeRequest(`movie/${movieId}`);\n\nexport const getCastMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/credits`);\n\nexport const getReviewsMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/reviews`);\n\n\n  export const getSearchMovie = async search =>\n  await makeRequest(`search/movie?query=${search}&page=1`);\n//   export const getSearchMovie = async () =>\n//   await makeRequest(`search/movie?query=car&page=1`);\n\n//   async function getIdMovie(search) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${search}?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getCastMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/credits?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data.cast;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getReviewsMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n//       );\n//       return response.data.results;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n//   export {\n//     getListTrending,\n//     getIdMovie,\n//     getCastMovie,\n//     getReviewsMovie,\n//   };\n"],"names":["_jsx","className","children","Puff","height","width","radius","color","ariaLabel","Placeholder","Triangle","visible","wrapperStyle","wrapperClass","location","useLocation","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","searchData","setSearchData","onSearchListMovies","useMemo","getSearchMovie","then","res","console","log","results","length","toast","concat","_jsxs","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","map","_ref","id","original_title","title","poster_path","backdrop_path","original_language","vote_average","vote_count","release_date","Link","state","from","to","src","placeholderBackdrop","alt","placeholderPoster","Math","floor","axios","makeRequest","_asyncToGenerator","_regeneratorRuntime","_callee","path","url","response","_context","prev","next","params","api_key","sent","abrupt","data","t0","error","stop","_x","apply","arguments","getListTrending","_ref2","_callee2","_context2","getIdMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}