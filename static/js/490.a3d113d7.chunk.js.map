{"version":3,"file":"static/js/490.a3d113d7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"containerInput\":\"Movies_containerInput__tuqQZ\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"placeholder\":\"Movies_placeholder__NQC4f\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"imgBackdrop\":\"Movies_imgBackdrop__i0UnY\",\"mainInfo\":\"Movies_mainInfo__psMrX\",\"imgPoster\":\"Movies_imgPoster__ZYvqU\",\"infoItem\":\"Movies_infoItem__XuwZm\",\"titleItem\":\"Movies_titleItem__JiIro\",\"textItem\":\"Movies_textItem__uybB5\"};","import { useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'services/api';\nimport { Placeholder } from 'components/Loader/Loader';\n\nimport placeholderBackdrop from '../../images/placeholderBackdropSearch.jpg';\nimport placeholderPoster from '../../images/placeholderPosterSearch.png';\n\nimport s from './Movies.module.css';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputSearch, setInputSearch] = useState('');\n  const location = useLocation();\n  const productName = searchParams.get('search');\n\n  useMemo(() => {\n    if (!productName) {\n      return;\n    }\n    getSearchMovie(productName).then(res => {\n      if (res.results.length === 0) {\n        toast.info(\n          `Your search for \"${productName}\" did not have any matches.`\n        );\n        return;\n      }\n      setSearchFilm(res.results);\n      setInputSearch(productName);\n    });\n  }, [productName]);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    setSearchParams({\n      search: inputSearch,\n    });\n  };\n\n  const onKeyValue = e => {\n    if (e.key === 'Enter') {\n      updateQueryString(e);\n    }\n  };\n\n  const onValueString = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.containerInput}>\n        <input\n          type=\"text\"\n          className={s.input}\n          placeholder=\"Search movie...\"\n          value={inputSearch}\n          onChange={onValueString}\n          onKeyDown={onKeyValue}\n        />\n        <button className={s.btn} type=\"button\" onClick={updateQueryString}>\n          <i className=\"bx bx-search bx-sm bx-burst-hover\"></i>\n        </button>\n      </div>\n      {searchFilm.length > 0 ? (\n        <ul className={s.list}>\n          {searchFilm.map(\n            ({\n              id,\n              original_title,\n              title,\n              poster_path,\n              backdrop_path,\n              original_language,\n              vote_average,\n              vote_count,\n              release_date,\n            }) => (\n              <Link key={id} state={{ from: location }} to={`${id}`}>\n                <li className={s.item}>\n                  <div className={s.imgBackdrop}>\n                    <img\n                      src={\n                        backdrop_path\n                          ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                          : placeholderBackdrop\n                      }\n                      alt={title}\n                    />\n                  </div>\n\n                  <ul className={s.mainInfo}>\n                    <li>\n                      <img\n                        className={s.imgPoster}\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                            : placeholderPoster\n                        }\n                        alt={title}\n                      />\n                    </li>\n                    <li className={s.infoItem}>\n                      <p className={s.titleItem}>{original_title}</p>\n                      <p className={s.textItem}>\n                        <span>\n                          <strong>Original language: </strong>\n                          {original_language}\n                        </span>\n\n                        <span>\n                          <strong>Release date: </strong>\n                          {release_date}\n                        </span>\n                        <span>\n                          <strong>Rating: </strong>\n                          {Math.floor(vote_average * 10) / 10}({vote_count})\n                        </span>\n                      </p>\n                    </li>\n                  </ul>\n                </li>\n              </Link>\n            )\n          )}\n        </ul>\n      ) : (\n        <div className={s.placeholder}>\n          <Placeholder />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst KEY = 'da273fadec6e0549daf77f4eda281870';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst makeRequest = async path => {\n  const url = `${path}`;\n  try {\n    const response = await axios.get(url, {\n      params: { api_key: KEY },\n    });\n    return response.data;\n  } catch (error) {\n    toast.error('Error');\n    console.error(error);\n  }\n};\n\nexport const getListTrending = async () =>\n  await makeRequest('trending/movie/day?');\n\nexport const getIdMovie = async movieId =>\n  await makeRequest(`movie/${movieId}`);\n\nexport const getCastMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/credits`);\n\nexport const getReviewsMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/reviews`);\n\nexport const getSearchMovie = async search =>\n  await makeRequest(`search/movie?query=${search}&page=1`);\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchFilm","setSearchFilm","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","inputSearch","setInputSearch","location","useLocation","productName","get","useMemo","getSearchMovie","then","res","results","length","toast","concat","updateQueryString","e","preventDefault","search","_jsxs","className","s","children","_jsx","type","placeholder","value","onChange","currentTarget","onKeyDown","key","onClick","map","_ref","id","original_title","title","poster_path","backdrop_path","original_language","vote_average","vote_count","release_date","Link","state","from","to","src","placeholderBackdrop","alt","placeholderPoster","Math","floor","Placeholder","axios","makeRequest","_asyncToGenerator","_regeneratorRuntime","_callee","path","url","response","_context","prev","next","params","api_key","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","getListTrending","_ref2","_callee2","_context2","getIdMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}