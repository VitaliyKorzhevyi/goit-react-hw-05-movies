{"version":3,"file":"static/js/95.03527b79.chunk.js","mappings":"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","sources":["pages/Details.jsx","services/api.js"],"sourcesContent":["import { Suspense, useEffect, useMemo, useState } from 'react';\n\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getCastMovie, getIdMovie, getReviewsMovie } from 'services/api';\n\nimport './styled/Details.css';\nimport placeholderBackdrop from \"../images/placeholderBackdropDetails.jpg\";\nimport placeholderPoster from \"../images/placeholderPosterSearch.png\";\n\n\nconst Details = ({ onGetCast, onGetReviews}) => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const lastPage = location.state?.from ?? '/';\n\n  const [movies, setMovies] = useState({});\n\n  // Memoized get запити\n  const memoMovie = useMemo(() => getIdMovie(movieId), [movieId]);\n  const memoCast = useMemo(() => getCastMovie(movieId), [movieId]);\n  const memoReviews = useMemo(() => getReviewsMovie(movieId), [movieId]);\n\n  useEffect(() => {\n    memoMovie.then(setMovies);\n    memoCast.then(res => {\n      onGetCast(res.cast);\n    });\n    memoReviews.then(res => {\n      onGetReviews(res.results);\n    });\n  }, [memoMovie, memoCast, memoReviews, onGetCast, onGetReviews]);\n\n  console.log('movies', movies);\n  const {\n    title,\n    overview,\n    vote_average,\n    poster_path,\n    genres,\n    backdrop_path,\n    runtime,\n    release_date,\n    production_countries,\n    original_language,\n    popularity,\n    homepage,\n  } = movies;\n\n  return (\n    <>\n      <div className=\"container-details\">\n        <div className=\"container-btn-last\">\n          <Link to={lastPage}>\n            <button type=\"button\">\n              <i className=\"bx bx-chevron-left bx-sm bx-fade-left-hover\"></i>\n            </button>\n          </Link>\n        </div>\n        <div>\n          <img\n            className=\"background-image\"\n            src={backdrop_path ? `https://image.tmdb.org/t/p/w500/${backdrop_path}` : placeholderBackdrop}\n            alt={title}\n          />\n          <div className=\"details-content\">\n            <ul className=\"details-list\">\n              <li>\n                <h2 className=\"title-details\">\n                  {title} ({release_date && release_date.slice(0, 4)})\n                </h2>\n              </li>\n              <li className=\"item-details one-info\">\n                <p>\n                  {production_countries &&\n                    production_countries.map(i => i.name).join(', ')}\n                </p>\n                <p>{genres && genres.map(i => i.name).join(', ')}</p>\n              </li>\n              <li className=\"item-details one-info\">\n                <p>\n                  <strong>Language: </strong>\n                  {original_language}\n                </p>\n                <p>\n                  {runtime} minutes / {Math.round(runtime / 60)} hours\n                </p>\n                <p>\n                  <strong>Range:</strong> {vote_average}\n                </p>\n                <p>\n                  <strong>Popularity:</strong>{' '}\n                  {Math.floor(popularity * 10) / 10}\n                </p>\n              </li>\n              <li className=\"item-details three-info\">\n                <p>{overview}</p>\n              </li>\n              <li className='item-details btns-info'>\n                <button type=\"button\" className='btn-watch'>\n                <i className='bx bx-right-arrow' ></i>\n                  <a href={homepage}>Watch</a>\n                </button>\n                <Link to={'cast'}>\n                  <button type=\"button\" className='btn-link'>Top Billed Cast</button>\n                </Link>\n                <Link to={'reviews'}>\n                  <button type=\"button\" className='btn-link'>Reviews</button>\n                </Link>\n              </li>\n            </ul>\n            <img\n              src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : placeholderPoster}\n              alt={title}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='ellipse-desktop-1'></div>\n      <div className='ellipse-desktop-2'></div>\n      <div className='ellipse-desktop-3'></div>\n      <div className='ellipse-desktop-4'></div>\n      <div className='ellipse-desktop-5'></div>\n      <Suspense>\n           <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Details;\n","import axios from 'axios';\n\nconst KEY = 'da273fadec6e0549daf77f4eda281870';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst makeRequest = async path => {\n  const url = `${path}`;\n  try {\n    const response = await axios.get(url, {\n      params: { api_key: KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getListTrending = async () =>\n  await makeRequest('trending/movie/day?');\n\nexport const getIdMovie = async movieId =>\n  await makeRequest(`movie/${movieId}`);\n\nexport const getCastMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/credits`);\n\nexport const getReviewsMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/reviews`);\n\n\n  export const getSearchMovie = async search =>\n  await makeRequest(`search/movie?query=${search}&page=1`);\n//   export const getSearchMovie = async () =>\n//   await makeRequest(`search/movie?query=car&page=1`);\n\n//   async function getIdMovie(search) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${search}?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getCastMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/credits?api_key=${KEY}&language=en-US`\n//       );\n//       return response.data.cast;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n  \n//   async function getReviewsMovie(id) {\n//     try {\n//       const response = await axios.get(\n//         `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n//       );\n//       return response.data.results;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n//   export {\n//     getListTrending,\n//     getIdMovie,\n//     getCastMovie,\n//     getReviewsMovie,\n//   };\n"],"names":["_ref","_location$state$from","_location$state","onGetCast","onGetReviews","movieId","useParams","lastPage","useLocation","state","from","_useState","useState","_useState2","_slicedToArray","movies","setMovies","memoMovie","useMemo","getIdMovie","memoCast","getCastMovie","memoReviews","getReviewsMovie","useEffect","then","res","cast","results","console","log","title","overview","vote_average","poster_path","genres","backdrop_path","runtime","release_date","production_countries","original_language","popularity","homepage","_jsxs","_Fragment","children","className","_jsx","Link","to","type","src","concat","placeholderBackdrop","alt","slice","map","i","name","join","Math","round","floor","href","placeholderPoster","Suspense","Outlet","axios","makeRequest","_asyncToGenerator","_regeneratorRuntime","_callee","path","url","response","_context","prev","next","params","api_key","sent","abrupt","data","t0","error","stop","_x","apply","arguments","getListTrending","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","getSearchMovie","_ref6","_callee6","search","_context6","_x5"],"sourceRoot":""}