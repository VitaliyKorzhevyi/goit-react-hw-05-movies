{"version":3,"file":"static/js/341.78143556.chunk.js","mappings":"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","sources":["pages/Details.jsx","services/api.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\n\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getIdMovie } from 'services/api';\n\nimport './styled/Details.css';\n\nconst Details = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const lastPage = location.state?.from ?? '/';\n\n  const [movies, setMovies] = useState({});\n\n  const memoizedGetIdMovie = useMemo(() => getIdMovie(movieId), [movieId]);\n\n  useEffect(() => {\n    memoizedGetIdMovie.then(setMovies);\n  }, [memoizedGetIdMovie]);\n\n  console.log('movies', movies);\n  const {\n    title,\n    overview,\n    vote_average,\n    poster_path,\n    genres,\n    backdrop_path,\n    runtime,\n    release_date,\n    production_countries,\n    original_language,\n    popularity,\n    homepage,\n  } = movies;\n\n  return (\n    <>\n    <div className=\"container-details\">\n      <div className=\"container-btn-last\">\n        <Link to={lastPage}>\n          <button type=\"button\">\n            <i className=\"bx bx-chevron-left bx-sm bx-fade-left-hover\"></i>\n          </button>\n        </Link>\n      </div>\n      <div>\n        <img\n          className=\"background-image\"\n          src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n          alt={title}\n        />\n        <div className=\"details-content\">\n          <ul className=\"details-list\">\n            <li>\n              <h2 className=\"title-details\">\n                {title} ({release_date && release_date.slice(0, 4)})\n              </h2>\n            </li>\n            <li className=\"item-details one-info\">\n              <p>\n                {production_countries &&\n                  production_countries.map(i => i.name).join(', ')}\n              </p>\n              <p>{genres && genres.map(i => i.name).join(', ')}</p>\n            </li>\n            <li className=\"item-details one-info\">\n              <p>\n                <strong>Language: </strong>\n                {original_language}\n              </p>\n              <p>\n                {runtime} minutes / {Math.round(runtime / 60)} hours\n              </p>\n              <p>\n                <strong>Range:</strong> {vote_average}\n              </p>\n              <p>\n                <strong>Popularity:</strong> {Math.floor(popularity * 10) / 10}\n              </p>\n            </li>\n            <li className=\"item-details three-info\">\n              <p>{overview}</p>\n            </li>\n            <li>\n              <button type=\"button\">\n                <a href={homepage}>Watch</a>\n              </button>\n              <Link to={\"cast\"} state={{ from: location.state?.from }}>\n                <button type=\"button\">Top Billed Cast</button>\n              </Link>\n              <Link to={\"reviews\"} state={{ from: location.state?.from }}>\n                <button type=\"button\">Reviews</button>\n              </Link>\n            </li>\n          </ul>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        </div>\n      </div>\n    </div>\n    <Outlet />\n    </>\n  );\n};\n\nexport default Details;\n","import axios from 'axios';\n\nconst KEY = 'da273fadec6e0549daf77f4eda281870';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst makeRequest = async path => {\n  const url = `${path}`;\n  try {\n    const response = await axios.get(url, {\n      params: { api_key: KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getListTrending = async () =>\n  await makeRequest('trending/movie/day?');\n\nexport const getIdMovie = async movieId =>\n  await makeRequest(`movie/${movieId}`);\n\nexport const getCastMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/credits`);\n\nexport const getReviewsMovie = async movieId =>\n  await makeRequest(`movie/${movieId}/reviews`);\n"],"names":["_location$state$from","_location$state","_location$state2","_location$state3","movieId","useParams","location","useLocation","lastPage","state","from","_useState","useState","_useState2","_slicedToArray","movies","setMovies","memoizedGetIdMovie","useMemo","getIdMovie","useEffect","then","console","log","title","overview","vote_average","poster_path","genres","backdrop_path","runtime","release_date","production_countries","original_language","popularity","homepage","_jsxs","_Fragment","children","className","_jsx","Link","to","type","src","concat","alt","slice","map","i","name","join","Math","round","floor","href","Outlet","axios","makeRequest","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","path","url","response","_context","prev","next","params","api_key","sent","abrupt","data","t0","error","stop","_x","apply","arguments","getListTrending","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}